Create database ATM
go 
use ATM
go

create table [User](
[userId] int primary key,
[name] varchar(20) not null,
[phoneNum] varchar(15) not null,
[city] varchar(20) not null
)
go

create table CardType(
[cardTypeID] int primary key,
[name] varchar(15),
[description] varchar(40) null
)
go
create Table [Card](
cardNum Varchar(20) primary key,
cardTypeID int foreign key references  CardType([cardTypeID]),
PIN varchar(4) not null,
[expireDate] date not null,
balance float not null
)
go


Create table UserCard(
userID int foreign key references [User]([userId]),
cardNum varchar(20) foreign key references [Card](cardNum),
primary key(cardNum)
)
go
create table [Transaction](
transId int primary key,
transDate date not null,
cardNum varchar(20) foreign key references [Card](cardNum),
amount int not null
)


INSERT [dbo].[User] ([userId], [name], [phoneNum], [city]) VALUES (1, N'Ali', N'03036067000', N'Narowal')
GO
INSERT [dbo].[User] ([userId], [name], [phoneNum], [city]) VALUES (2, N'Ahmed', N'03036047000', N'Lahore')
GO
INSERT [dbo].[User] ([userId], [name], [phoneNum], [city]) VALUES (3, N'Aqeel', N'03036063000', N'Karachi')
GO
INSERT [dbo].[User] ([userId], [name], [phoneNum], [city]) VALUES (4, N'Usman', N'03036062000', N'Sialkot')
GO
INSERT [dbo].[User] ([userId], [name], [phoneNum], [city]) VALUES (5, N'Hafeez', N'03036061000', N'Lahore')
GO


INSERT [dbo].[CardType] ([cardTypeID], [name], [description]) VALUES (1, N'Debit', N'Spend Now, Pay Now')
GO
INSERT [dbo].[CardType] ([cardTypeID], [name], [description]) VALUES (2, N'Credit', N'Spend Now, Pay later')
GO

INSERT [dbo].[Card] ([cardNum], [cardTypeID], [PIN], [expireDate], [balance]) VALUES (N'1234', 1, N'1770', CAST(N'2022-07-01' AS Date), 43025.31)
GO
INSERT [dbo].[Card] ([cardNum], [cardTypeID], [PIN], [expireDate], [balance]) VALUES (N'1235', 1, N'9234', CAST(N'2020-03-02' AS Date), 14425.62)
GO
INSERT [dbo].[Card] ([cardNum], [cardTypeID], [PIN], [expireDate], [balance]) VALUES (N'1236', 1, N'1234', CAST(N'2019-02-06' AS Date), 34325.52)
GO
INSERT [dbo].[Card] ([cardNum], [cardTypeID], [PIN], [expireDate], [balance]) VALUES (N'1237', 2, N'1200', CAST(N'2021-02-05' AS Date), 24325.3)
GO
INSERT [dbo].[Card] ([cardNum], [cardTypeID], [PIN], [expireDate], [balance]) VALUES (N'1238', 2, N'9004', CAST(N'2020-09-02' AS Date), 34025.12)
GO

INSERT [dbo].[UserCard] ([userID], [cardNum]) VALUES (1, N'1234')
GO
INSERT [dbo].[UserCard] ([userID], [cardNum]) VALUES (1, N'1235')
GO
INSERT [dbo].[UserCard] ([userID], [cardNum]) VALUES (2, N'1236')
GO
INSERT [dbo].[UserCard] ([userID], [cardNum]) VALUES (3, N'1238')
GO
Insert  [dbo].[UserCard] ([userID], [cardNum]) VALUES (4, N'1237')

INSERT [dbo].[Transaction] ([transId], [transDate], [cardNum], [amount]) VALUES (1, CAST(N'2017-02-02' AS Date), N'1234', 500)
GO
INSERT [dbo].[Transaction] ([transId], [transDate], [cardNum], [amount]) VALUES (2, CAST(N'2018-02-03' AS Date), N'1235', 3000)
GO
INSERT [dbo].[Transaction] ([transId], [transDate], [cardNum], [amount]) VALUES (3, CAST(N'2020-01-06' AS Date), N'1236', 2500)
GO
INSERT [dbo].[Transaction] ([transId], [transDate], [cardNum], [amount]) VALUES (4, CAST(N'2016-09-09' AS Date), N'1238', 2000)
GO
INSERT [dbo].[Transaction] ([transId], [transDate], [cardNum], [amount]) VALUES (5, CAST(N'2020-02-10' AS Date), N'1234', 6000)
GO


Select * from [User]
Select * from UserCard
Select * from [Card]
Select * from CardType
Select * from [Transaction]


--Q1
create view userInfo as
select * 
from [User]

select * from userInfo

--Q2
create view ATMUser as
select u.name,u.phoneNum,u.city,a.cardNum
from [User] as u
join UserCard as a on u.userid=a.userID

select * from ATMUser

--Q3
create procedure userinfo1 
@USERname varchar(20) 
as
begin 
    select *
	from [User]
	where name=@USERname
end

execute userinfo1 'Ali'

--Q4
create procedure minimumBalance
@balance float output
as 
begin 
   select @balance=min(balance)
   from [Card]
end

declare @balance1 float
execute minimumBalance @balance1 output
select @balance1

--Q5
create procedure getNoCards
@userN varchar(20) ,
@userID int ,
@NoOfCard int output
as 
begin 
   SELECT @NoOfCard = COUNT(*)
   FROM [User] u
   INNER JOIN UserCard uc ON u.userId = uc.userId
   WHERE u.name = @userN AND u.userId = @userId;
end

declare @noOfcard1 int
execute getNoCards 'Ali',1,@noOfcard1 output
select @noOfcard1

--Q6
create procedure LoggIn
@cardnumber varchar(20),
@pin varchar(4),
@status int output
as 
begin 
    if exists(select * from [Card] where cardNum=@cardnumber and PIN=@pin)
	   set @status=1
	else
	   set @status=0
end

declare @stats int 
execute LoggIn '1235','9234',@stats output
select @stats

--q7
CREATE PROCEDURE UpdatePIN
    @cardnumber VARCHAR(20),
    @oldpin VARCHAR(4),
    @newpin VARCHAR(4)
AS 
BEGIN 
    IF EXISTS(SELECT * FROM [Card] WHERE cardNum = @cardnumber AND PIN = @oldpin)
    BEGIN
        UPDATE [Card] 
		SET PIN = @newpin 
		WHERE cardNum = @cardnumber

        IF @@ROWCOUNT > 0
            PRINT 'Updated PIN'
        ELSE
            PRINT 'Error'
    END
    ELSE
        PRINT 'Error'
END

execute UpdatePIN '1235','9234','6264'

--q8
create procedure WithDraw
@cardnumber VARCHAR(20),
@pin VARCHAR(4),
@amount int
AS 
BEGIN 
    DECLARE @status INT, @balance int
   execute LoggIn @cardnumber, @pin, @status OUTPUT



CREATE PROCEDURE [dbo].[WithDraw]
    @cardNum VARCHAR(20),
    @PIN VARCHAR(4),
    @amount FLOAT
AS
BEGIN
    DECLARE @isValid BIT
    EXEC @isValid = [LoggIn] @cardNum, @PIN
    IF @isValid = 1
    BEGIN
        DECLARE @balance FLOAT
        SELECT @balance = balance FROM [Card] WHERE cardNum = @cardNum

        IF @balance >= @amount
        BEGIN
            UPDATE [Card] SET balance = balance - @amount WHERE cardNum = @cardNum
            DECLARE @maxTransId INT
            SELECT @maxTransId = ISNULL(MAX(transId), 0) FROM [Transaction]

            INSERT INTO [Transaction] (transId, transDate, cardNum, amount, transType)
            VALUES (@maxTransId + 1, GETDATE(), @cardNum, @amount, 1)

            SELECT 'Transaction successful.'
        END
        ELSE
        BEGIN
            DECLARE @maxTransId INT
            SELECT @maxTransId = ISNULL(MAX(transId), 0) FROM [Transaction]

            INSERT INTO [Transaction] (transId, transDate, cardNum, amount, transType)
            VALUES (@maxTransId + 1, GETDATE(), @cardNum, @amount, 4) 

            SELECT 'transaction Failed.Not enough balance'
        END
    END
    ELSE
    BEGIN
        SELECT 'invalid pin or card'
    END
END
